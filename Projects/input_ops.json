{
  "project_metadata": {
    "project_id_prefix": "PORT",
    "context_label": "Context:PERS",
    "default_assignee": "Kin-Caid",
    "version": "1.0.0"
    },
    "project_name": "Automated Portfolio Website",
    "meta_objectives": [
        {
            "id": "M1",
            "text": "Forge a living digital testament that automatically showcases an Operative's contributions, eliminating all manual portfolio updates."
        },
        {
            "id": "M2",
            "text": "Construct a public-facing 'Precision Shell' that translates an Operative's internal reputation matrix into verifiable, external proof of work."
        },
        {
            "id": "M3",
            "text": "Establish a scalable and replicable system that empowers any Chironian to manifest their completed Guild Ops as a dynamic public portfolio."
        },
        {
            "id": "M4",
            "text": "Master the alchemy of transforming raw Guild data into a compelling, public narrative of an Operative's skill and accomplishments."
        }
    ],
    "project_sectors": [
        {
            "sector_id": 1,
            "sector_name": "Forge Scaffolding & Data Ingress",
            "sector_summary": "Establish the foundational Jekyll project structure and create a reliable data conduit to ingest the operative_registry.json. This sector prepares the digital forge for the work to come.",
            "alignment_with_meta_objectives": "This directly serves M3 and M4 by creating the core, replicable framework and providing the initial mechanism for transforming raw Guild data into a structured asset."
        },
        {
            "sector_id": 2,
            "sector_name": "Aesthetic Forging & Content Manifestation",
            "sector_summary": "Transmute the ingested data into a visually compelling 'Precision Shell' using Liquid templates and refined CSS. This sector focuses on dynamically rendering each Guild Op as a polished element of the public-facing portfolio.",
            "alignment_with_meta_objectives": "Directly achieves the core visual goal of M2 by constructing the 'Precision Shell' that gives form to an Operative's reputation matrix, and contributes to M4 by shaping the public narrative of accomplishment."
        },
        {
            "sector_id": 3,
            "sector_name": "Runic Automation & Live Deployment",
            "sector_summary": "Inscribe the GitHub Actions workflow that automates the entire build and deployment process. This ensures the portfolio remains a living testament, perpetually updated without any manual intervention.",
            "alignment_with_meta_objectives": "This is the critical implementation of M1, forging the automated 'living digital testament.' It embodies the 'set-and-forget' principle, making the system truly autonomous."
        },
        {
            "sector_id": 4,
            "sector_name": "System Sanctification & Guild Codex",
            "sector_summary": "Finalize and document the system, ensuring its robustness, clarity, and replicability for other Chironians. This sector validates all acceptance criteria and captures the project's knowledge in the Guild's records.",
            "alignment_with_meta_objectives": "Fulfills the 'scalable and replicable system' mandate of M3, ensuring the project's value extends beyond a single Operative and contributes lasting, documented knowledge to the Guild."
        }
    ],
    "guild_ops": [
        {
            "sector_id": 1,
            "op_title": "Initialize Jekyll Forge Scaffolding & Configuration",
            "op_type": "DEV",
            "primary_deliverable": "The standard Jekyll file structure (`_layouts`, `_data`, etc.) and a configured `_config.yml` file are established within the main repository, ready for development."
        },
        {
            "sector_id": 1,
            "op_title": "Scribe the Data Ingress Script for Local Development",
            "op_type": "DEV",
            "primary_deliverable": "A shell script (`scripts/sync_registry.sh`) that reliably copies the `operative_registry.json` from its source into the Jekyll project's `_data` directory."
        },
        {
            "sector_id": 1,
            "op_title": "Codify the Local Forge Setup & Execution Protocol",
            "op_type": "DOC",
            "primary_deliverable": "A markdown file (`DEV_SETUP.md`) detailing the precise steps to install dependencies, run the data ingress script, and serve the Jekyll site locally."
        },
        {
            "sector_id": 1,
            "op_title": "Conduct Data Ingress Verification Rite",
            "op_type": "QAT",
            "primary_deliverable": "A context compilation log with screenshots confirming that data from `operative_registry.json` can be successfully accessed and rendered on a test page, validating the entire Sector 1 pipeline."
        }
    ]
}
