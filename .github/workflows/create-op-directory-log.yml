name: Create Guild Op Directory and Log File

on:
  issues:
    types:
      - opened

jobs:
  create_directory_and_metadata:
    runs-on: ubuntu-latest
    permissions:
      contents: write # IMPORTANT: Grant write permissions for the GITHUB_TOKEN

    steps:
      - name: Checkout repository
        # Use GITHUB_TOKEN for checkout - it has read permissions by default, but also write due to above permissions
        uses: actions/checkout@v4 

      - name: Parse Guild Op ID from issue
        id: parse_guild_op
        run: |
          echo "Parsing Guild Op ID from issue title or description..."
          GUILD_OP_ID=$(echo "${{ github.event.issue.title }} ${{ github.event.issue.body }}" | grep -oE "\\[[A-Z]+-[A-Z]+-[0-9]{3}\\]" | head -n 1)

          if [ -z "$GUILD_OP_ID" ]; then
            echo "::error::Guild Op ID not found in issue title or description! Please include an ID like [AAA-BBB-123]."
            exit 1
          fi
          echo "Found Guild Op ID: ${GUILD_OP_ID}"
          echo "guild_op_id=${GUILD_OP_ID}" >> $GITHUB_ENV

      - name: Create Guild Op directory
        run: |
          echo "Creating directory for Guild Op: ${{ env.guild_op_id }}"
          mkdir -p "archives/${{ env.guild_op_id }}"
          echo "Directory created: archives/${{ env.guild_op_id }}"

      - name: Create Metadata File
        run: |
          METADATA_FILE="archives/${{ env.guild_op_id }}/${{ env.guild_op_id }}_operation_log.md"
          echo "Creating metadata file: ${METADATA_FILE}"
          cat <<EOF > "${METADATA_FILE}"
          # Guild Op Metadata: ${{ env.guild_op_id }}

          ## Guild Op Details
          - **Title:** ${{ github.event.issue.title }}
          - **URL:** ${{ github.event.issue.html_url }}
          - **Author:** ${{ github.event.issue.user.login }}
          - **Created At:** ${{ github.event.issue.created_at }}

          ## Description
          ${{ github.event.issue.body }}

          ## Notes
          - This is a generated log file for tracking Guild Op metadata.
          - Update this file with progress logs, decisions, and schematics as needed.
          EOF
          echo "Metadata file created."
          
      - name: Commit and Push Changes
        run: |
          # Check if there are actual changes before attempting to commit
          if [ -z "$(git status --porcelain)" ]; then
            echo "No changes detected. Directory or metadata file might already exist or issue ID was duplicated."
            exit 0 # Exit successfully if no changes
          fi

          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          
          # No need to set remote URL with PAT, GITHUB_TOKEN is automatically used
          git add "archives/${{ env.guild_op_id }}"
          git commit -m "feat(guild-op): Create directory and metadata file for Guild Op: ${{ env.guild_op_id }}"
          
          # Push changes using the default GITHUB_TOKEN
          echo "Attempting to push changes to main branch using GITHUB_TOKEN..."
          git push origin main
          echo "Changes pushed successfully."
