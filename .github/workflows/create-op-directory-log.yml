name: Create Guild Op Directory and Log File on Feature Branch

on:
  issues:
    types:
      - opened

permissions:
  contents: write # IMPORTANT: Grant write permissions for the GITHUB_TOKEN
  pull-requests: write # Needed if you want the action to create a PR later (optional)

jobs:
  create_directory_and_metadata:
    runs-on: ubuntu-latest
    steps:
      - name: Parse Guild Op Info from Issue
        id: parse_guild_op
        run: |
          echo "Parsing Guild Op Info from issue..."
          # Extract RAW_GUILD_OP_ID (e.g., [CHRN-DEV-001])
          RAW_GUILD_OP_ID=<span class="math-inline">\(echo "</span>{{ github.event.issue.title }} ${{ github.event.issue.body }}" | grep -oE "\[[A-Z0-9_]+-[A-Z]{3,5}-[0-9]{3,}\]" | head -n 1)

          if [ -z "$RAW_GUILD_OP_ID" ]; then
            echo "::error::Guild Op ID not found or invalid format in issue title/body! Please include an ID like [PROJECTPREFIX-TYPE-001]."
            exit 1
          fi
          echo "Found Raw Guild Op ID: <span class="math-inline">\{RAW\_GUILD\_OP\_ID\}"
echo "raw\_guild\_op\_id\=</span>{RAW_GUILD_OP_ID}" >> <span class="math-inline">GITHUB\_ENV
\# Extract PROJECT\_ID\_PREFIX \(e\.g\., CHRN from \[CHRN\-DEV\-001\]\)
\# Removes brackets, then takes part before first hyphen
PROJECT\_ID\_PREFIX\_RAW\=</span>(echo "<span class="math-inline">\{RAW\_GUILD\_OP\_ID\}" \| sed 's/\\\[//g; s/\\\]//g'\) \# Remove brackets
PROJECT\_ID\_PREFIX\=</span>(echo "${PROJECT_ID_PREFIX_RAW}" | awk -F'-' '{print $1}')
          
          if [ -z "$PROJECT_ID_PREFIX" ]; then
            echo "::error::Could not parse PROJECT_ID_Prefix from Guild Op ID: ${RAW_GUILD_OP_ID}"
            exit 1
          fi
          echo "Found Project ID Prefix: <span class="math-inline">\{PROJECT\_ID\_PREFIX\}"
echo "project\_id\_prefix\=</span>{PROJECT_ID_PREFIX}" >> <span class="math-inline">GITHUB\_ENV
\# Extract Project Name Slug from label \(e\.g\., "Guild\-Self\-Assembly" from "Project\-Slug\:Guild\-Self\-Assembly"\)
PROJECT\_NAME\_SLUG\=</span>(echo "${{ toJSON(github.event.issue.labels) }}" | jq -r '.[] | select(.name | startswith("Project-Slug:")) | .name' | sed 's/Project-Slug://g' | head -n 1)

          if [ -z "$PROJECT_NAME_SLUG" ]; then
            echo "::error::'Project-Slug:' label not found or is empty on the issue! Example: 'Project-Slug:My-Awesome-Project'"
            exit 1
          fi
          echo "Found Project Name Slug: <span class="math-inline">\{PROJECT\_NAME\_SLUG\}"
echo "project\_name\_slug\=</span>{PROJECT_NAME_SLUG}" >> <span class="math-inline">GITHUB\_ENV
echo "GUILD\_OP\_BRANCH\=feature/guild\-op\-</span>{{ github.event.issue.number }}" >> $GITHUB_ENV

      - name: Checkout repository - target main first
        uses: actions/checkout@v4
        with:
          ref: main # Checkout main to base the new branch from

      - name: Create and switch to Guild Op feature branch
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
          if git rev-parse --verify ${{ env.GUILD_OP_BRANCH }} >/dev/null 2>&1; then
            echo "Branch ${{ env.GUILD_OP_BRANCH }} already exists. Checking it out and pulling latest from main."
            git checkout ${{ env.GUILD_OP_BRANCH }}
            # Optional: git pull origin main # To ensure branch is up-to-date if it's an old one
          else
            echo
