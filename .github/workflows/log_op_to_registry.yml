# .github/workflows/log-op-to-registry.yml

name: Log Guild Op to Registry on Issue Close

on:
  issues:
    types: [closed]

permissions:
  contents: write
  issues: read

jobs:
  log-to-registry:
    runs-on: ubuntu-latest
    if: "contains(github.event.issue.labels.*.name, 'guild-op')"

    steps:
      - name: Check out main branch
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: DEBUG - Print Environment Variables
        run: |
          echo "--- START OF RAW ISSUE_BODY ENV VAR ---"
          echo "${{ env.ISSUE_BODY }}"
          echo "--- END OF RAW ISSUE_BODY ENV VAR ---"
          echo " "
          echo "--- START OF JSON-ESCAPED ISSUE_BODY ---"
          echo '${{ toJSON(github.event.issue.body) }}'
          echo "--- END OF JSON-ESCAPED ISSUE_BODY ---"
        env:
          ISSUE_BODY: ${{ github.event.issue.body }}

      - name: Update Operative Registry
        # This 'env' block makes all issue data available to the Python script
        # as environment variables. This is the most robust method.
        env:
          ISSUE_NUMBER: ${{ github.event.issue.number }}
          ISSUE_TITLE: ${{ github.event.issue.title }}
          ISSUE_BODY: ${{ github.event.issue.body }}
          ISSUE_URL: ${{ github.event.issue.html_url }}
          CLOSED_AT: ${{ github.event.issue.closed_at }}
          ASSIGNEES_JSON: ${{ toJSON(github.event.issue.assignees) }}
        run: |
          python .github/scripts/update_registry.py
          
      - name: Commit and push registry changes
        run: |
          REGISTRY_FILE_PATH="_Admin & Core Docs/registry/operative_registry.json"
          git config user.name "Chiron Guild Bot"
          git config user.email "actions@github.com"
          
          if ! git diff --quiet "$REGISTRY_FILE_PATH"; then
            git add "$REGISTRY_FILE_PATH"
            git commit -m "Forge Seal: Logged Guild Op #${{ github.event.issue.number }} to Registry"
            git push
            echo "Operative Registry updated successfully."
          else
            echo "No changes detected in the registry file. Skipping commit."
          fi
